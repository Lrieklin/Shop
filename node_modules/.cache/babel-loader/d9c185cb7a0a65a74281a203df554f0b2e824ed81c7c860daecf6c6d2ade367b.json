{"ast":null,"code":"var _jsxFileName = \"/Users/lrieklin/Desktop/ticktack/src/components/Item.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Item({\n  pokemonItem\n}) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [pokemonItem.map(res => {\n      /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-image\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: res.sprite\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 7,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"card-title\",\n            children: res.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 8,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            className: \"btn-floating halfway-fab waves-effect waves-light red\",\n            children: /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"material-icons\",\n              children: \"add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 10,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 9,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 6,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-content\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 14,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 5,\n        columnNumber: 13\n      }, this);\n    }), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"I am a very simple card. I am good at containing small bits of information. I am convenient because I require little markup to use effectively.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true);\n}\n_c = Item;\nexport { Item };\nvar _c;\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"names":["Item","pokemonItem","_jsxDEV","_Fragment","children","map","res","className","src","sprite","fileName","_jsxFileName","lineNumber","columnNumber","name","_c","$RefreshReg$"],"sources":["/Users/lrieklin/Desktop/ticktack/src/components/Item.jsx"],"sourcesContent":["function Item({ pokemonItem }) {\n  return (\n    <>\n      {pokemonItem.map((res) => {\n            <div className=\"card\">\n              <div className=\"card-image\">\n                <img src={res.sprite} />\n                <span className=\"card-title\">{res.name}</span>\n                <a className=\"btn-floating halfway-fab waves-effect waves-light red\">\n                  <i className=\"material-icons\">add</i>\n                </a>\n              </div>\n              <div className=\"card-content\">\n                <p>\n                  I am a very simple card. I am good at containing small bits of\n                  information. I am convenient because I require little markup\n                  to use effectively.\n                </p>\n              </div>\n        </div>;\n      })}\n                <p>\n                  I am a very simple card. I am good at containing small bits of\n                  information. I am convenient because I require little markup\n                  to use effectively.\n                </p>\n    </>\n  );\n}\n\nexport { Item };\n"],"mappings":";;;AAAA,SAASA,IAAIA,CAAC;EAAEC;AAAY,CAAC,EAAE;EAC7B,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,GACGH,WAAW,CAACI,GAAG,CAAEC,GAAG,IAAK;MACpB,aAAAJ,OAAA;QAAKK,SAAS,EAAC,MAAM;QAAAH,QAAA,gBACnBF,OAAA;UAAKK,SAAS,EAAC,YAAY;UAAAH,QAAA,gBACzBF,OAAA;YAAKM,GAAG,EAAEF,GAAG,CAACG;UAAO;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACxBX,OAAA;YAAMK,SAAS,EAAC,YAAY;YAAAH,QAAA,EAAEE,GAAG,CAACQ;UAAI;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAC9CX,OAAA;YAAGK,SAAS,EAAC,uDAAuD;YAAAH,QAAA,eAClEF,OAAA;cAAGK,SAAS,EAAC,gBAAgB;cAAAH,QAAA,EAAC;YAAG;cAAAM,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAG;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACpC,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNX,OAAA;UAAKK,SAAS,EAAC,cAAc;UAAAH,QAAA,eAC3BF,OAAA;YAAAE,QAAA,EAAG;UAIH;YAAAM,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAG;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IACR,CAAC,CAAC,eACQX,OAAA;MAAAE,QAAA,EAAG;IAIH;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA,eACd,CAAC;AAEP;AAACE,EAAA,GA5BQf,IAAI;AA8Bb,SAASA,IAAI;AAAG,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}